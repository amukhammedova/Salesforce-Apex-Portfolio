1. Challenge: Rest Api Authentication through Postman.
Solution: 

Sfdc side:
-I created a Connected App under App Manager
-Gave it a Name, Provided email address, Enabled OAuth Setting (under API), Callback URL: https://localhost, Selected Full access, and Perform requests at any time(refresh token, offline_access) under Selected OAuth Scopes
-Once saved, it generated a new Consumer Key and Consumer Secret

Postman side:
-Created a RestAPI Collection, then added a request for RestAPI Authentication
-Method: Post
-Endpoint: https://login.salesforce.com/services/oauth2/token
-Headers: 
      Authorization: Bearer <Security_Token>
      Content-Type: application/x-www-form-urlencoded
-Body:
      Grant_Type: password
      Client_Id
      Client_Secret
      Username
      Password: <passwordSecurityToken>

-Send Request: 
      Status Code 200 Ok, AccessToken, instanceUrl is received back.


2. Create a REST API endpoint to retrieve Account records, returning names and phone numbers.
Solution: 
Based on the request above, I received the Access token, and instanceUrl that I was able to use to complete the second challenge.

Postman side:
-Method: Get
-Endpoint: <InstanceUrl>/services/data/v52.0/sobjects/Account/<AccountId>
-Body: none

-Send Request: 
      Status Code 200 Ok, received details on the Account record passed.


3. Apex REST Endpoint
Solution:

Sfdc side:
-Create Apex RestResource Annotated class

@RestResource(urlMapping='/contact/')
global with sharing class ContactAPi {
    @HttpGet
    global static Contact getContact() {
        RestRequest req = RestContext.request;
        String contactId = req.requestURI.substring(req.requestURI.lastIndexOf('/')+1);
        return [SELECT Id, Name, Email FROM Contact WHERE Id = :contactId LIMIT 1];
    }
}

Postman side:
-Method: Get
-Endpoint: <instanceUrl>/services/apexrest/contact/<ContactID>
-Headers: 
   Authorization: Bearer <SecurityToken>
   ContentType: application/json


4.
